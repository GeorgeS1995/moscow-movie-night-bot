// Code generated by go-enum DO NOT EDIT.
// Version: 0.3.9
// Revision: 5a95b1bbcaf1f8f32542725929d84acdf48e0259
// Build Date: 2021-11-05T17:00:39Z
// Built By: goreleaser

package telegram

import (
	"fmt"
)

const (
	// PositiveAnswersDA is a PositiveAnswers of type ДА.
	PositiveAnswersDA PositiveAnswers = iota
	// PositiveAnswersDa is a PositiveAnswers of type Да.
	PositiveAnswersDa
	// PositiveAnswersDa is a PositiveAnswers of type да.
	PositiveAnswersda
)

const _PositiveAnswersName = "ДАДада"

var _PositiveAnswersMap = map[PositiveAnswers]string{
	PositiveAnswersDA: _PositiveAnswersName[0:4],
	PositiveAnswersDa: _PositiveAnswersName[4:8],
	PositiveAnswersda: _PositiveAnswersName[8:12],
}

// String implements the Stringer interface.
func (x PositiveAnswers) String() string {
	if str, ok := _PositiveAnswersMap[x]; ok {
		return str
	}
	return fmt.Sprintf("PositiveAnswers(%d)", x)
}

var _PositiveAnswersValue = map[string]PositiveAnswers{
	_PositiveAnswersName[0:4]: PositiveAnswersDA,
	_PositiveAnswersName[4:8]: PositiveAnswersDa,
	_PositiveAnswersName[8:12]: PositiveAnswersda,
}

// ParsePositiveAnswers attempts to convert a string to a PositiveAnswers
func ParsePositiveAnswers(name string) (PositiveAnswers, error) {
	if x, ok := _PositiveAnswersValue[name]; ok {
		return x, nil
	}
	return PositiveAnswers(0), fmt.Errorf("%s is not a valid PositiveAnswers", name)
}
